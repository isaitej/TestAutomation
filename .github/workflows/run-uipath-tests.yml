name: UiPath CI - Build, Test, and Publish

on:
  push:
    branches:
      - main

jobs:
  uipath-ci:
    runs-on: windows-latest

    steps:
      - name: ‚¨áÔ∏è Checkout repository
        uses: actions/checkout@v3

      - name: üõ† Install UiPath CLI
        run: dotnet tool install --global UiPath.CLI --add-source https://www.myget.org/F/uipath-dev/api/v3/index.json
        shell: pwsh

      - name: ‚úÖ Validate project
        run: uipcli project validate --path "$(Get-Location)"
        shell: pwsh

      - name: üì¶ Package project
        run: uipcli project pack --path "$(Get-Location)" --output "$(Get-Location)\output"
        shell: pwsh

      - name: üöÄ Push package to Orchestrator
        run: |
          $packagePath = Get-ChildItem "$(Get-Location)\output" -Filter "*.nupkg" | Select-Object -First 1
          uipcli package push `
            --path $packagePath.FullName `
            --cloud `
            --clientId "${{ secrets.UIPATH_CLIENT_ID }}" `
            --clientSecret "${{ secrets.UIPATH_CLIENT_SECRET }}" `
            --accountLogicalName "${{ secrets.UIPATH_ACCOUNT_LOGICAL_NAME }}" `
            --tenantLogicalName "${{ secrets.UIPATH_TENANT_LOGICAL_NAME }}" `
            --folder "${{ secrets.UIPATH_FOLDER_NAME }}"
        shell: pwsh

      - name: üß™ Run Test Cases and Generate Report
        run: |
          uipcli test run `
            --output "$(Get-Location)\test-results" `
            --format JUnit `
            --cloud `
            --clientId "${{ secrets.UIPATH_CLIENT_ID }}" `
            --clientSecret "${{ secrets.UIPATH_CLIENT_SECRET }}" `
            --accountLogicalName "${{ secrets.UIPATH_ACCOUNT_LOGICAL_NAME }}" `
            --tenantLogicalName "${{ secrets.UIPATH_TENANT_LOGICAL_NAME }}" `
            --folder "${{ secrets.UIPATH_FOLDER_NAME }}"
        shell: pwsh

      # - name: üì§ Upload JUnit Test Report
      #   uses: actions/upload-artifact@v3
      #   with:
      #     name: uipath-test-report
      #     path: test-results/*.xml
