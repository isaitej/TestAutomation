name: Build, Publish and Run UiPath Process

on:
  push:
    branches:
      - main  # change as needed

jobs:
  build_publish_run:
    runs-on: windows-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Setup .NET (optional)
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '7.0.x'

      - name: Build UiPath project (optional)
        run: |
          echo "Add UiPath Studio CLI build commands here if applicable."

      - name: Get UiPath OAuth Token
        id: get_token
        shell: pwsh
        run: |
          $clientId = "21a6955b-2fbe-4cd4-8d71-4124dff739ce".Trim()
          $clientSecret = "1ljhMu`$Db!6boY6W"  # Note the backtick before $ to escape in PowerShell
          $scope = "OR.Jobs"

          $body = "grant_type=client_credentials&client_id=$clientId&client_secret=$clientSecret&scope=$scope"

          $response = Invoke-RestMethod -Uri "https://cloud.uipath.com/identity_/connect/token" `
              -Method Post `
              -Body $body `
              -ContentType "application/x-www-form-urlencoded"

          $accessToken = $response.access_token
          Write-Host "::add-mask::$accessToken"
          echo "token=$accessToken" >> $env:GITHUB_OUTPUT

      - name: Upload UiPath Package
        shell: pwsh
        env:
          ACCESS_TOKEN: ${{ steps.get_token.outputs.token }}
          UIPATH_ACCOUNT_LOGICAL_NAME: "testbfsvyha"   # Replace with your actual account logical name
          UIPATH_TENANT: "DefaultTenant"                               # Replace with your actual tenant name
          UIPATH_FOLDER: "Shared"                               # Replace with your folder or leave empty string
        run: |
          $packagePath = "TestAutomationProject.1.0.202484824.nupkg"
          if (!(Test-Path $packagePath)) {
            Write-Error "Package not found: $packagePath"
            exit 1
          }

          $uploadUrl = "https://cloud.uipath.com/$env:UIPATH_ACCOUNT_LOGICAL_NAME/$env:UIPATH_TENANT/odata/Processes/UiPath.Server.Configuration.OData.UploadPackage"

          $form = @{
            file = Get-Item $packagePath
            folderPath = $env:UIPATH_FOLDER
            overwriteExistingPackage = $true
          }

          Invoke-RestMethod -Uri $uploadUrl `
            -Headers @{ Authorization = "Bearer $env:ACCESS_TOKEN" } `
            -Method Post `
            -Form $form

          Write-Host "Package uploaded successfully"

      - name: Start UiPath Job (optional)
        shell: pwsh
        env:
          ACCESS_TOKEN: ${{ steps.get_token.outputs.token }}
          UIPATH_ACCOUNT_LOGICAL_NAME: "testbfsvyha"   # Replace
          UIPATH_TENANT: "DefaultTenant"                               # Replace
        run: |
          $processName = "TestAutomationProject"

          $processesUrl = "https://cloud.uipath.com/$env:UIPATH_ACCOUNT_LOGICAL_NAME/$env:UIPATH_TENANT/odata/Processes?\$filter=Name eq '$processName'"

          $processesResponse = Invoke-RestMethod -Uri $processesUrl -Headers @{ Authorization = "Bearer $env:ACCESS_TOKEN" }

          if ($processesResponse.value.Count -eq 0) {
            Write-Error "Process '$processName' not found in Orchestrator"
            exit 1
          }

          $processKey = $processesResponse.value[0].Key

          $startJobUrl = "https://cloud.uipath.com/$env:UIPATH_ACCOUNT_LOGICAL_NAME/$env:UIPATH_TENANT/odata/Jobs/UiPath.Server.Configuration.OData.StartJobs"

          $jobBody = @{
            startInfo = @{
              ReleaseKey = $processKey
              Strategy = "All"
            }
          } | ConvertTo-Json -Depth 10

          Invoke-RestMethod -Uri $startJobUrl -Headers @{ Authorization = "Bearer $env:ACCESS_TOKEN" } -Method Post -Body $jobBody -ContentType "application/json"

          Write-Host "Job started successfully"
