name: Upload UiPath Package

on:
  push:
    branches: [main]

jobs:
  upload-package:
    runs-on: windows-latest

    env:
      UIPATH_CLIENT_ID: 21a6955b-2fbe-4cd4-8d71-4124dff739ce
      UIPATH_CLIENT_SECRET: 1ljhMu$Db!6boY6W
      UIPATH_SCOPE: OR.Jobs
      UIPATH_ORCH_URL: https://cloud.uipath.com
      PACKAGE_PATH: output\TestAutomationProject.1.0.202558802.nupkg

    steps:
      - name: üì• Checkout repository
        uses: actions/checkout@v3

      - name: üîê Get Orchestrator Token
        id: get_token
        shell: pwsh
        run: |
          $clientId = "${{ env.UIPATH_CLIENT_ID }}"
          $clientSecret = "1ljhMu`$Db!6boY6W"  # Escape $
          $scope = "${{ env.UIPATH_SCOPE }}"

          $body = "grant_type=client_credentials&client_id=$clientId&client_secret=$clientSecret&scope=$scope"

          try {
              $response = Invoke-RestMethod -Uri "${{ env.UIPATH_ORCH_URL }}/identity_/connect/token" `
                -Method Post `
                -Body $body `
                -ContentType "application/x-www-form-urlencoded" `
                -ErrorAction Stop

              $token = $response.access_token
              echo "üîë Token retrieved."
              echo "::add-mask::$token"
              echo "::set-output name=token::$token"
          }
          catch {
              Write-Error "‚ùå Failed to get token: $_"
              exit 1
          }

      - name: üöÄ Upload package to Orchestrator
        shell: pwsh
        env:
          ORCH_TOKEN: ${{ steps.get_token.outputs.token }}
        run: |
          $packagePath = "$env:GITHUB_WORKSPACE\${{ env.PACKAGE_PATH }}"
          if (-Not (Test-Path $packagePath)) {
            Write-Error "‚ùå Package not found: $packagePath"
            exit 1
          }

          Write-Output "üì¶ Uploading: $packagePath"
          Invoke-RestMethod -Uri "${{ env.UIPATH_ORCH_URL }}/odata/Packages/UiPath.Server.Configuration.OData.UploadPackage" `
            -Method Post `
            -Headers @{ Authorization = "Bearer $env:ORCH_TOKEN" } `
            -InFile $packagePath `
            -ContentType "application/octet-stream"

          Write-Output "‚úÖ Upload successful."
